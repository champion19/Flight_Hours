#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.
#!/bin/sh
message=$(cat "$1")

echo "Debug: ,Mensaje del commit: $message"

#patron regex para el mensaje del commit
commit_pattern="^(fix|feat|doc|chore|refactor|test|style|perf|build|ci|revert):.*"

if ! echo "$message" | grep -Eiq "$commit_pattern"; then
			echo "Error:El mensaje del commit no sigue el formato"
			echo "formato:<tipo>:<descripcion>"
			echo "tipos permitidos:feat,fix,docs,style,refactor,test,chore,build,ci,perf,revert"
			exit 1
fi

echo "formato del mensaje valido"}
exit 0



